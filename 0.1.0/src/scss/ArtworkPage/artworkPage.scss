#artworkPage {
    position: fixed;
    top: 0;
    left: 50%;
    transform: translate(-50%, 0);
    height: calc(var(--vh, 1vh) * 100);
    width: calc(var(--vw, 1vw) * 100);
    overflow-x: visible;
    touch-action: none;

    ::v-deep(.mainHeader) {
        .left {
            .backButton {
                width: calc(var(--vw, 1vw) * 8);
                height: calc(var(--vw, 1vw) * 8);
                display: flex;
                align-items: center;
                justify-content: flex-start;
            }
        }

        .right {
            .roundProfile {
                height: calc(var(--vw, 1vw) * 7.7);
                width: calc(var(--vw, 1vw) * 7.7);
            }
        }
    }

    > .artworkInformation {
        position: fixed;
        z-index: 2;
        // mainHeader의 높이
        top: calc(var(--vw, 1vw) * 17.5);
        width: calc(100% - var(--padding, 5vw) * 2);

        .top {
            display: flex;
            align-items: center;
            justify-content: space-between;

            .artworkTitle {
                font-weight: 600;
                font-size: 24px;
                line-height: 115%;
                letter-spacing: -0.04em;
                text-align: left;
            }
        }

        .bottom {
            padding-top: calc(var(--vw, 1vw) * 3);
            display: flex;
            align-items: center;
            justify-content: flex-start;
            gap: calc(var(--vw, 1vw) * 2);

            .artist {
                font-weight: 700;
                font-size: 13px;
                line-height: 115%;
                letter-spacing: -0.06em;
            }
        }
    }
    
    .artworkSlider {
        left: calc(-1 * var(--padding, 5vw));
        width: calc(100% + 2 * var(--padding, 5vw));
        height: 100%;
        touch-action: auto !important;
    }

    .buttonContainer {
        position: fixed;
        bottom: 0;
        left: 0;
        z-index: 1;
        width: 100%;
        height: calc(var(--vw, 1vw) * 30);

        display: flex;
        align-items: center;
        justify-content: space-evenly;
    }

    .scrollPopUpContainer {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 2;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        animation-name: scrollPopUp;
        animation-duration: 0.5s;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
    }

    .popUp {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: white;
        border-radius: calc(var(--vw, 1vw) * 3);
        width: calc(var(--vw, 1vw) * 43);
        height: calc(var(--vw, 1vw) * 46);

        p {
            padding-top: calc(var(--vw, 1vw) * 2);
            font-weight: 400;
            font-size: 15px;
            line-height: 150%;
            text-align: center;
            letter-spacing: -0.06em;

            color: #000000;
        }
    }

    .popUp.archive {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1;
        opacity: 0;
        display: none;
    }

    .popUp.archive.show {
        display: flex;
        animation-name: archivePopUp;
        animation-duration: 1s;
        animation-iteration-count: 1;
    }

    .tap {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
        width: 100%;
        height: 100%;
        display: flex;
        opacity: 1;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        animation-name: tap;
        font-size: 30px;
        letter-spacing: -0.04em;
        animation-duration: 3s;
        /* The "animation-timing-function : linear" property causes the animation to proceed at a constant speed. */
        animation-timing-function: linear;
        /* Set the interval at which the animation runs to 0s. */
        animation-delay: 0s;
        /* Makes the animation loop infinitely. */
        animation-iteration-count: infinite;
        /* Causes the animation to proceed in the forward direction. */
        animation-direction: normal;
        animation-fill-mode: none;
    }

    .loading {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 2;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        opacity: 1;
        align-items: center;
        justify-content: center;
        background-color: rgba(0, 0, 0, 0.4);

        > div {
            background-color: transparent;
    
            svg {
                fill: white;
    
                path,
                g {
                    fill: white;
                }
            }
        }
    
        .notArchive {
            transition-property: opacity, padding;
            transition-duration: 0.2s;
            opacity: 1;
    
            overflow: hidden;
            position: relative;
            width: calc(var(--vw, 1vw) * 55);
            height: calc(var(--vw, 1vw) * 30);
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-left: calc(var(--vw, 1vw) * 10);
            padding-right: calc(var(--vw, 1vw) * 10);
    
            .eye {
                width: 50%;
                height: 100%;
                position: relative;
    
                svg {
                    position: absolute;
                }
    
                .eyelid {
                    top: 49%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    width: 85%;
                    height: auto;
                }
    
                .pupil {
                    top: 54%;
                    left: 65%;
                    transform: translate(-50%, -50%);
                    width: 44%;
                    height: auto;
    
                    animation-name: eyeroll;
                    animation-duration: 4s;
                    animation-timing-function: linear;
                    animation-delay: 0s;
                    animation-iteration-count: infinite;
                    animation-direction: normal;
                    animation-fill-mode: none;
                }
            }
        }
        .phrase {
            color: white;
            opacity: 1;
            font-style: normal;
            font-size: 20px;
            font-weight: 500;
            line-height: 115%;
            letter-spacing: -0.04em;
        }
    }
}

@keyframes archivePopUp {
    30% {
        opacity: 1;
    }
    
    70% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

@keyframes scrollPopUp {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes tap {
    0% {
        font-size: calc(var(--vw, 1vw) * 8);
        opacity: 0.5;
    }

    10% {
        font-size: calc(var(--vw, 1vw) * 10);
        opacity: 0.8;
    }

    15% {
        font-size: calc(var(--vw, 1vw) * 12);
        opacity: 1;
    }

    20% {
        font-size: calc(var(--vw, 1vw) * 10);
        opacity: 0.8;
    }

    25% {
        font-size: calc(var(--vw, 1vw) * 8);
        opacity: 0.5;
    }

    100% {
        font-size: calc(var(--vw, 1vw) * 8);
        opacity: 0.5;
    }
}

@keyframes eyeroll {
    0% {
        left: 65%;
    }

    5% {
        left: 53%;
    }

    10% {
        left: 41%;
    }

    12.5% {
        left: 35%;
    }

    15% {
        left: 41%;
    }

    20% {
        left: 53%;
    }

    25% {
        left: 65%;
    }

    100% {
        left: 65%;
    }
}